
type CartItem{
    id : Int!,
    retailer : User!,
    flower : Flower!,
    quantity : Int!,
    grade : String!,
    orderedAt : LocalDate,
    createdAt : LocalDate!,
    updatedAt : LocalDate!,
    deletedAt : LocalDate,
}

type OrderSheet{
    id : Int!,
    orderNo : String!,
    retailer : User,
    wholesaler : User,
    orderItems(pagination: PaginationInput) : [OrderItem],
    # 주문서에 해당하는 꽃의 총 개수
    totalFlowerQuantity : Int,
    # 주문서에 해당하는 꽃의 품종 개수(중복x)
    totalFlowerTypeCount : Int,
    orderSheetReceipts : [OrderSheetReceipt],
    createdAt : LocalDate!,
    updatedAt : LocalDate!,
    deletedAt : LocalDate,
}

type OrderItem{
    id : Int!,
    orderSheet : OrderSheet,
    retailer : User,
    wholesaler : User!,
    flower : Flower!,
    quantity : Int!,
    grade : String!,
    price : Int,
    createdAt : LocalDate!,
    updatedAt : LocalDate!,
    deletedAt : LocalDate,
}

type OrderSheetReceipt{
    id : Int!,
    orderSheet : OrderSheet,
    filePath : String!,
    fileFormat : String!,
    metadata : String,
    createdAt : LocalDate!,
    updatedAt : LocalDate!,
    deletedAt : LocalDate,
}

## -------------- QUERY ------------------
extend type Query {
    # [소매상] 장바구니 목록 가져오기
    getAllCartItems(pagination : PaginationInput) : [CartItem]
    # [소매상] 주문서 목록 가져오기
    getOrderSheets(filter : OrderSheetFilterInput,  pagination : PaginationInput) : [OrderSheet],
    # [소매상] 주문서 단건 가져오기
    getOrderSheet(orderSheetId : Int!, pagination : PaginationInput) : OrderSheet,
}
## -------------- MUTATION ------------------
extend type Mutation {
    # [소매상] 장바구니 담기
    addToCart(input : AddToCartInput) : CartItem!,
    # [소매상] 장바구니 항목 삭제
    removeCartItem(cartItemId : Int!) : Int!,
    # [소매상] 장바구니 항목들 주문하기
    orderCartItems(input : OrderCartItemsInput) : OrderSheet,
    # [소매상] 주문서 삭제하기(주문 취소)
    removeOrderSheet(orderSheetId : Int!) : Int!,
}
